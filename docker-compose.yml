version: '3.8'

services:
  redis:
    image: redis
    # persistent storage
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: bash -c 'exec 6<>/dev/tcp/redis/6379'
      interval: 2s
      retries: 10
  db:
    image: postgres
    # persist data beyond lifetime of container
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=gyana
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=psql
    healthcheck:
      test: pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}
      interval: 2s
      retries: 10
  engine:
    image: postgres
    # persist data beyond lifetime of container
    volumes:
      - engine_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=gyana
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=psql
    healthcheck:
      test: pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}
      interval: 2s
      retries: 10
  web:
    image: gyana:dev
    command: /bin/bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    ports:
      - '8000:8000'
    env_file:
      - ./.env.docker
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
  js:
    image: gyana:dev
    command: npm run build:watch
    volumes:
      - .:/code
    env_file:
      - ./.env.docker
  celery:
    image: gyana:dev
    command: celery -A gyana worker -Q celery,priority -l INFO
    volumes:
      - .:/code
    env_file:
      - ./.env.docker
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data:
  engine_data:
