# Generated by Django 3.2 on 2021-07-13 12:00

import dirtyfields.dirtyfields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import model_clone.mixins.clone


class Migration(migrations.Migration):

    dependencies = [
        ('workflows', '0038_workflow_data_updated'),
    ]

    operations = [
        migrations.AlterField(
            model_name='node',
            name='kind',
            field=models.CharField(choices=[('input', 'Get data'), ('output', 'Save data'), ('select', 'Select'), ('join', 'Join'), ('aggregation', 'Aggregation'), ('union', 'Union'), ('sort', 'Sort'), ('limit', 'Limit'), ('filter', 'Filter'), ('edit', 'Edit'), ('add', 'Add'), ('rename', 'Rename'), ('text', 'Text'), ('formula', 'Formula'), ('distinct', 'Distinct'), ('pivot', 'Pivot'), ('unpivot', 'Unpivot'), ('intersect', 'Intersection'), ('window', 'Window')], max_length=16),
        ),
        migrations.CreateModel(
            name='WindowColumn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('column', models.CharField(max_length=300)),
                ('function', models.CharField(choices=[('sum', 'Sum'), ('count', 'Count'), ('mean', 'Average'), ('max', 'Maximum'), ('min', 'Minimum'), ('std', 'Standard deviation')], max_length=20)),
                ('group_by', models.CharField(max_length=300, null=True)),
                ('order_by', models.CharField(max_length=300, null=True)),
                ('ascending', models.BooleanField(default=True, help_text='Select to sort ascendingly')),
                ('label', models.CharField(max_length=300, validators=[django.core.validators.RegexValidator('^[a-zA-Z_][0-9a-zA-Z_]*$', 'Only numbers, letters and underscores allowed.')])),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='window_columns', to='workflows.node')),
            ],
            options={
                'abstract': False,
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, model_clone.mixins.clone.CloneMixin, models.Model),
        ),
    ]
