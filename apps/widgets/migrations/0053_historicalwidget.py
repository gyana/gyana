# Generated by Django 3.2.11 on 2022-03-01 15:00

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        ('dashboards', '0022_auto_20220105_1539'),
        ('tables', '0016_auto_20220208_1139'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('widgets', '0052_widget_currency'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalWidget',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('palette_colors', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(default='#5D62B5', max_length=7), null=True, size=10)),
                ('background_color', models.CharField(max_length=7, null=True)),
                ('show_tooltips', models.BooleanField(null=True)),
                ('font_size', models.IntegerField(null=True)),
                ('font_color', models.CharField(max_length=7, null=True)),
                ('currency', models.CharField(blank=True, choices=[('AED', 'AED - د.إ'), ('AFN', 'AFN - ؋'), ('ALL', 'ALL - L'), ('AMD', 'AMD - ֏'), ('ANG', 'ANG - ƒ'), ('AOA', 'AOA - Kz'), ('ARS', 'ARS - $'), ('AUD', 'AUD - $'), ('AWG', 'AWG - ƒ'), ('AZN', 'AZN - ₼'), ('BAM', 'BAM - KM'), ('BBD', 'BBD - $'), ('BDT', 'BDT - ৳'), ('BGN', 'BGN - лв'), ('BHD', 'BHD - .د.ب'), ('BIF', 'BIF - FBu'), ('BMD', 'BMD - $'), ('BND', 'BND - $'), ('BOB', 'BOB - $b'), ('BRL', 'BRL - R$'), ('BSD', 'BSD - $'), ('BTC', 'BTC - ฿'), ('BTN', 'BTN - Nu.'), ('BWP', 'BWP - P'), ('BYR', 'BYR - Br'), ('BYN', 'BYN - Br'), ('BZD', 'BZD - BZ$'), ('CAD', 'CAD - $'), ('CDF', 'CDF - FC'), ('CHF', 'CHF - CHF'), ('CLP', 'CLP - $'), ('CNY', 'CNY - ¥'), ('COP', 'COP - $'), ('CRC', 'CRC - ₡'), ('CUC', 'CUC - $'), ('CUP', 'CUP - ₱'), ('CVE', 'CVE - $'), ('CZK', 'CZK - Kč'), ('DJF', 'DJF - Fdj'), ('DKK', 'DKK - kr'), ('DOP', 'DOP - RD$'), ('DZD', 'DZD - دج'), ('EEK', 'EEK - kr'), ('EGP', 'EGP - £'), ('ERN', 'ERN - Nfk'), ('ETB', 'ETB - Br'), ('ETH', 'ETH - Ξ'), ('EUR', 'EUR - €'), ('FJD', 'FJD - $'), ('FKP', 'FKP - £'), ('GBP', 'GBP - £'), ('GEL', 'GEL - ₾'), ('GGP', 'GGP - £'), ('GHC', 'GHC - ₵'), ('GHS', 'GHS - GH₵'), ('GIP', 'GIP - £'), ('GMD', 'GMD - D'), ('GNF', 'GNF - FG'), ('GTQ', 'GTQ - Q'), ('GYD', 'GYD - $'), ('HKD', 'HKD - $'), ('HNL', 'HNL - L'), ('HRK', 'HRK - kn'), ('HTG', 'HTG - G'), ('HUF', 'HUF - Ft'), ('IDR', 'IDR - Rp'), ('ILS', 'ILS - ₪'), ('IMP', 'IMP - £'), ('INR', 'INR - ₹'), ('IQD', 'IQD - ع.د'), ('IRR', 'IRR - ﷼'), ('ISK', 'ISK - kr'), ('JEP', 'JEP - £'), ('JMD', 'JMD - J$'), ('JOD', 'JOD - JD'), ('JPY', 'JPY - ¥'), ('KES', 'KES - KSh'), ('KGS', 'KGS - лв'), ('KHR', 'KHR - ៛'), ('KMF', 'KMF - CF'), ('KPW', 'KPW - ₩'), ('KRW', 'KRW - ₩'), ('KWD', 'KWD - KD'), ('KYD', 'KYD - $'), ('KZT', 'KZT - лв'), ('LAK', 'LAK - ₭'), ('LBP', 'LBP - £'), ('LKR', 'LKR - ₨'), ('LRD', 'LRD - $'), ('LSL', 'LSL - M'), ('LTC', 'LTC - Ł'), ('LTL', 'LTL - Lt'), ('LVL', 'LVL - Ls'), ('LYD', 'LYD - LD'), ('MAD', 'MAD - MAD'), ('MDL', 'MDL - lei'), ('MGA', 'MGA - Ar'), ('MKD', 'MKD - ден'), ('MMK', 'MMK - K'), ('MNT', 'MNT - ₮'), ('MOP', 'MOP - MOP$'), ('MRO', 'MRO - UM'), ('MRU', 'MRU - UM'), ('MUR', 'MUR - ₨'), ('MVR', 'MVR - Rf'), ('MWK', 'MWK - MK'), ('MXN', 'MXN - $'), ('MYR', 'MYR - RM'), ('MZN', 'MZN - MT'), ('NAD', 'NAD - $'), ('NGN', 'NGN - ₦'), ('NIO', 'NIO - C$'), ('NOK', 'NOK - kr'), ('NPR', 'NPR - ₨'), ('NZD', 'NZD - $'), ('OMR', 'OMR - ﷼'), ('PAB', 'PAB - B/.'), ('PEN', 'PEN - S/.'), ('PGK', 'PGK - K'), ('PHP', 'PHP - ₱'), ('PKR', 'PKR - ₨'), ('PLN', 'PLN - zł'), ('PYG', 'PYG - Gs'), ('QAR', 'QAR - ﷼'), ('RMB', 'RMB - ￥'), ('RON', 'RON - lei'), ('RSD', 'RSD - Дин.'), ('RUB', 'RUB - ₽'), ('RWF', 'RWF - R₣'), ('SAR', 'SAR - ﷼'), ('SBD', 'SBD - $'), ('SCR', 'SCR - ₨'), ('SDG', 'SDG - ج.س.'), ('SEK', 'SEK - kr'), ('SGD', 'SGD - $'), ('SHP', 'SHP - £'), ('SLL', 'SLL - Le'), ('SOS', 'SOS - S'), ('SRD', 'SRD - $'), ('SSP', 'SSP - £'), ('STD', 'STD - Db'), ('STN', 'STN - Db'), ('SVC', 'SVC - $'), ('SYP', 'SYP - £'), ('SZL', 'SZL - E'), ('THB', 'THB - ฿'), ('TJS', 'TJS - SM'), ('TMT', 'TMT - T'), ('TND', 'TND - د.ت'), ('TOP', 'TOP - T$'), ('TRL', 'TRL - ₤'), ('TRY', 'TRY - ₺'), ('TTD', 'TTD - TT$'), ('TVD', 'TVD - $'), ('TWD', 'TWD - NT$'), ('TZS', 'TZS - TSh'), ('UAH', 'UAH - ₴'), ('UGX', 'UGX - USh'), ('USD', 'USD - $'), ('UYU', 'UYU - $U'), ('UZS', 'UZS - лв'), ('VEF', 'VEF - Bs'), ('VND', 'VND - ₫'), ('VUV', 'VUV - VT'), ('WST', 'WST - WS$'), ('XAF', 'XAF - FCFA'), ('XBT', 'XBT - Ƀ'), ('XCD', 'XCD - $'), ('XOF', 'XOF - CFA'), ('XPF', 'XPF - ₣'), ('YER', 'YER - ﷼'), ('ZAR', 'ZAR - R'), ('ZWD', 'ZWD - Z$')], help_text='Select a currency', max_length=32, null=True)),
                ('metric_font_size', models.IntegerField(null=True)),
                ('metric_font_color', models.CharField(max_length=7, null=True)),
                ('metric_header_font_size', models.IntegerField(null=True)),
                ('metric_header_font_color', models.CharField(max_length=7, null=True)),
                ('metric_comparison_font_size', models.IntegerField(null=True)),
                ('metric_comparison_font_color', models.CharField(max_length=7, null=True)),
                ('text_content', models.TextField(blank=True, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('image', models.TextField(blank=True, max_length=100, null=True)),
                ('kind', models.CharField(choices=[('text', 'Text'), ('image', 'Image'), ('metric', 'Metric'), ('table', 'Table'), ('mscolumn2d', 'Column'), ('stackedcolumn2d', 'Stacked Column'), ('msbar2d', 'Bar'), ('stackedbar2d', 'Stacked Bar'), ('msline', 'Line'), ('msline-stacked', 'Stacked Line'), ('pie2d', 'Pie'), ('msarea', 'Area'), ('doughnut2d', 'Donut'), ('scatter', 'Scatter'), ('funnel', 'Funnel'), ('pyramid', 'Pyramid'), ('radar', 'Radar'), ('bubble', 'Bubble'), ('heatmap', 'Heatmap'), ('timeseries-line', 'Line Timeseries'), ('timeseries-line_stacked', 'Stacked Line Timeseries'), ('timeseries-column', 'Column Timeseries'), ('timeseries-column-stacked', 'Stacked Column Timeseries'), ('timeseries-area', 'Area Timeseries'), ('mscombidy2d', 'Combination chart'), ('iframe', 'iframe')], default='mscolumn2d', max_length=32)),
                ('aggregator', models.CharField(choices=[('none', 'None'), ('sum', 'Sum'), ('mean', 'Average')], max_length=32)),
                ('dimension', models.CharField(max_length=300, null=True)),
                ('part', models.CharField(blank=True, choices=[('date', 'Date'), ('week', 'Week with year'), ('month', 'Month with year'), ('monthonly', 'Month without year'), ('year', 'Year'), ('quarter', 'Quarter with year')], help_text='Select the desired date part', max_length=16, null=True)),
                ('second_dimension', models.CharField(max_length=300, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('sort_by', models.CharField(choices=[('dimension', 'Dimension'), ('metric', 'Metric')], default='dimension', max_length=12)),
                ('sort_column', models.CharField(blank=True, max_length=300, null=True)),
                ('sort_ascending', models.BooleanField(default=True)),
                ('width', models.IntegerField(default=495, help_text='The width is in absolute pixel value.')),
                ('height', models.IntegerField(default=390, help_text='The height is in absolute pixel value.')),
                ('x', models.IntegerField(default=0, help_text='The x field is in absolute pixel value.')),
                ('y', models.IntegerField(default=0, help_text='The y field is in absolute pixel value.')),
                ('stack_100_percent', models.BooleanField(default=False)),
                ('error', models.CharField(max_length=300, null=True)),
                ('date_column', models.CharField(help_text='Select a temporal column that will be used when using the dashboard date slicer', max_length=300, null=True)),
                ('show_summary_row', models.BooleanField(default=False, help_text='Display a summary row at the bottom of your table')),
                ('compare_previous_period', models.BooleanField(default=False, verbose_name='Compare with previous period')),
                ('positive_decrease', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('page', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='dashboards.page')),
                ('table', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tables.table')),
            ],
            options={
                'verbose_name': 'historical widget',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
