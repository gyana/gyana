# Generated by Django 4.0.4 on 2022-06-07 08:59

from django.db import migrations

from apps.columns.bigquery import resolve_colname


def resort_widgets(widgets):
    for widget in widgets:
        if widget.sort_column:
            continue

        if widget.sort_by == "dimension" and widget.dimension:
            widget.sort_column = widget.dimension
        elif widget.aggregations.exist():
            aggregations = widget.aggregations.all()
            names = [column.column for column in aggregations]
            agg_names = [
                resolve_colname(column.column, column.function, names)
                for column in aggregations
            ]
            widget = agg_names[0]


def backsort_widgets(widgets):
    for widget in widgets:
        if widget.sort_column == widget.dimension:
            widget.sort_by = "dimension"
        else:
            widget.sort_by = "metric"


def forward(apps, schema_editor):
    Widget = apps.get_model("widgets", "Widget")

    widgets = Widget.objects.all()

    resort_widgets(widgets)
    Widget.objects.bulk_update(widgets, ["sort_column"])

    HistoricalWidget = apps.get_model("widgets", "HistoricalWidget")
    historical_widgets = HistoricalWidget.objects.all()

    resort_widgets(historical_widgets)
    HistoricalWidget.objects.bulk_update(historical_widgets, ["sort_column"])


def backward(apps, schema_editor):
    Widget = apps.get_model("widgets", "Widget")
    HistoricalWidget = apps.get_model("widgets", "HistoricalWidget")

    widgets = Widget.objects.all()
    backsort_widgets(widgets)
    Widget.objects.bulk_update(widgets, ["sort_by"])

    historical_widgets = HistoricalWidget.objects.all()
    backsort_widgets(historical_widgets)
    HistoricalWidget.objects.bulk_update(historical_widgets, ["sort_by"])


class Migration(migrations.Migration):

    dependencies = [
        ("widgets", "0060_alter_historicalwidget_table_show_header_and_more"),
    ]

    operations = [
        migrations.RunPython(forward, reverse_code=backward),
        migrations.RemoveField(
            model_name="historicalwidget",
            name="sort_by",
        ),
        migrations.RemoveField(
            model_name="widget",
            name="sort_by",
        ),
    ]
