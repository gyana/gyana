# Generated by Django 3.2.12 on 2022-03-31 10:18

import requests
from django.conf import settings
from django.db import migrations

group_url = (
    f"{settings.FIVETRAN_URL}/groups/{settings.FIVETRAN_GROUP}/connectors?limit=1000"
)


def forward(apps, schema_editor):
    Connector = apps.get_model("connectors", "Connector")

    connectors = requests.get(group_url, headers=settings.FIVETRAN_HEADERS).json()[
        "data"
    ]["items"]

    google_ads = list(
        filter(lambda c: c["service"] in ["adwords", "google_ads"], connectors)
    )

    schema_mapping = {c["schema"]: c for c in google_ads}

    for c in google_ads:
        if new_c := schema_mapping.get(f"{c['schema']}_new_api"):
            connector = Connector.objects.get(fivetran_id=c["id"])
            connector.service = "google_ads"
            connector.schema = new_c["schema"]
            connector.fivetran_id = new_c["id"]

            connector.save()


def backward(apps, schema_editor):
    Connector = apps.get_model("connectors", "Connector")
    connectors = Connector.objects.filter(service="google_ads").all()
    for connector in connectors:
        connector.service = "adswords"

    Connector.objects.bulk_update(connectors, ["service"])


class Migration(migrations.Migration):

    dependencies = [
        ("connectors", "0020_alter_connector_fivetran_id"),
    ]

    operations = [migrations.RunPython(forward, reverse_code=backward)]
