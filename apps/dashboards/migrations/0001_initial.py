# Generated by Django 4.0.8 on 2023-02-02 22:41

import apps.base.clone
import apps.dashboards.utils
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Dashboard",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("extra_html_head", models.TextField(null=True)),
                ("extra_css", models.TextField(null=True)),
                ("preview_by_default", models.BooleanField(default=False)),
                ("grid_size", models.IntegerField(default=15)),
                ("width", models.IntegerField(default=1200)),
                ("height", models.IntegerField(default=840)),
                (
                    "palette_colors",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(default="#5D62B5", max_length=7),
                        default=apps.dashboards.utils.getDefaultThemePalette,
                        size=10,
                    ),
                ),
                ("background_color", models.CharField(default="#ffffff", max_length=7)),
                ("font_size", models.IntegerField(default="14")),
                ("font_color", models.CharField(default="#242733", max_length=7)),
                (
                    "font_family",
                    models.CharField(
                        choices=[
                            ("Boogaloo", "Boogaloo"),
                            ("Lato", "Lato"),
                            ("Merriweather", "Merriweather"),
                            ("Montserrat", "Montserrat"),
                            ("Open Sans", "Open Sans"),
                            ("Roboto", "Roboto"),
                            ("Ubuntu", "Ubuntu"),
                        ],
                        default="Roboto",
                        max_length=30,
                    ),
                ),
                ("snap_to_grid", models.BooleanField(default=True)),
                ("show_widget_border", models.BooleanField(default=True)),
                ("show_widget_headers", models.BooleanField(default=True)),
                ("widget_header_font_size", models.IntegerField(default="18")),
                (
                    "widget_background_color",
                    models.CharField(default="#ffffff", max_length=7),
                ),
                (
                    "widget_border_color",
                    models.CharField(default="#e6e6e6", max_length=7),
                ),
                ("widget_border_radius", models.IntegerField(default=5)),
                ("widget_border_thickness", models.IntegerField(default=1)),
                ("name", models.CharField(default="Untitled", max_length=255)),
                (
                    "shared_status",
                    models.CharField(
                        choices=[
                            ("private", "Private"),
                            ("public", "Public"),
                            ("password_protected", "Password Protected"),
                        ],
                        default="private",
                        max_length=20,
                    ),
                ),
                ("shared_id", models.UUIDField(blank=True, null=True, unique=True)),
                (
                    "password",
                    models.CharField(
                        max_length=128, null=True, verbose_name="password"
                    ),
                ),
                ("password_set", models.DateTimeField(editable=False, null=True)),
            ],
            options={
                "abstract": False,
            },
            bases=(apps.base.clone.CloneMixin, models.Model),
        ),
        migrations.CreateModel(
            name="DashboardUpdate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("object_id", models.PositiveIntegerField()),
            ],
            options={
                "ordering": ("-updated",),
                "abstract": False,
            },
            bases=(apps.base.clone.CloneMixin, models.Model),
        ),
        migrations.CreateModel(
            name="DashboardVersion",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "ordering": ("-updated",),
                "abstract": False,
            },
            bases=(apps.base.clone.CloneMixin, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalDashboard",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("created", models.DateTimeField(blank=True, editable=False)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                ("extra_html_head", models.TextField(null=True)),
                ("extra_css", models.TextField(null=True)),
                ("preview_by_default", models.BooleanField(default=False)),
                ("grid_size", models.IntegerField(default=15)),
                ("width", models.IntegerField(default=1200)),
                ("height", models.IntegerField(default=840)),
                (
                    "palette_colors",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(default="#5D62B5", max_length=7),
                        default=apps.dashboards.utils.getDefaultThemePalette,
                        size=10,
                    ),
                ),
                ("background_color", models.CharField(default="#ffffff", max_length=7)),
                ("font_size", models.IntegerField(default="14")),
                ("font_color", models.CharField(default="#242733", max_length=7)),
                (
                    "font_family",
                    models.CharField(
                        choices=[
                            ("Boogaloo", "Boogaloo"),
                            ("Lato", "Lato"),
                            ("Merriweather", "Merriweather"),
                            ("Montserrat", "Montserrat"),
                            ("Open Sans", "Open Sans"),
                            ("Roboto", "Roboto"),
                            ("Ubuntu", "Ubuntu"),
                        ],
                        default="Roboto",
                        max_length=30,
                    ),
                ),
                ("snap_to_grid", models.BooleanField(default=True)),
                ("show_widget_border", models.BooleanField(default=True)),
                ("show_widget_headers", models.BooleanField(default=True)),
                ("widget_header_font_size", models.IntegerField(default="18")),
                (
                    "widget_background_color",
                    models.CharField(default="#ffffff", max_length=7),
                ),
                (
                    "widget_border_color",
                    models.CharField(default="#e6e6e6", max_length=7),
                ),
                ("widget_border_radius", models.IntegerField(default=5)),
                ("widget_border_thickness", models.IntegerField(default=1)),
                ("name", models.CharField(default="Untitled", max_length=255)),
                (
                    "shared_status",
                    models.CharField(
                        choices=[
                            ("private", "Private"),
                            ("public", "Public"),
                            ("password_protected", "Password Protected"),
                        ],
                        default="private",
                        max_length=20,
                    ),
                ),
                ("shared_id", models.UUIDField(blank=True, db_index=True, null=True)),
                (
                    "password",
                    models.CharField(
                        max_length=128, null=True, verbose_name="password"
                    ),
                ),
                ("password_set", models.DateTimeField(editable=False, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical dashboard",
                "verbose_name_plural": "historical dashboards",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Page",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255, null=True)),
                ("position", models.IntegerField(default=1)),
                (
                    "dashboard",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pages",
                        to="dashboards.dashboard",
                    ),
                ),
            ],
            options={
                "ordering": ("position",),
            },
            bases=(apps.base.clone.CloneMixin, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPage",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("created", models.DateTimeField(blank=True, editable=False)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                ("name", models.CharField(max_length=255, null=True)),
                ("position", models.IntegerField(default=1)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "dashboard",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="dashboards.dashboard",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical page",
                "verbose_name_plural": "historical pages",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
