# Generated by Django 4.0.8 on 2023-02-02 22:41

import apps.base.clone
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('nodes', '0001_initial'),
        ('projects', '0001_initial'),
        ('integrations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('bq_table', models.CharField(max_length=1024)),
                ('bq_dataset', models.CharField(max_length=1024)),
                ('source', models.CharField(choices=[('integration', 'Integration'), ('workflow_node', 'Workflow node'), ('intermediate_node', 'Intermediate node'), ('cache_node', 'Cache node')], max_length=18)),
                ('num_rows', models.IntegerField(default=0)),
                ('data_updated', models.DateTimeField(auto_now_add=True)),
                ('copied_from', models.IntegerField(blank=True, null=True)),
                ('cache_node', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cache_table', to='nodes.node')),
                ('integration', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='integrations.integration')),
                ('intermediate_node', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='intermediate_table', to='nodes.node')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
                ('workflow_node', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='nodes.node')),
            ],
            options={
                'ordering': ('-created',),
                'unique_together': {('bq_table', 'bq_dataset')},
            },
            bases=(apps.base.clone.CloneMixin, models.Model),
        ),
    ]
