[
  {
    "id": "abs",
    "name": "abs",
    "categories": ["math"],
    "arguments": [
      { "name": "number", "description": "a numeric scalar or column" }
    ],
    "keywords": ["absolute", "modulus", "sign", "positive"],
    "description": "Calculate the absolute value of a numeric value.",
    "intercom_id": "abs-number"
  },
  {
    "id": "add",
    "name": "add",
    "categories": ["math"],
    "arguments": [
      { "name": "x", "description": "a numeric scalar or column" },
      { "name": "y", "description": "a numeric scalar or column" }
    ],
    "keywords": ["addition", "plus", "summation"],
    "description": "Adds two numeric values together.",
    "intercom_id": "add-x-y"
  },
  {
    "id": "and",
    "name": "and",
    "categories": ["generic"],
    "arguments": [
      {
        "name": "value",
        "description": "boolean scalars or columns",
        "repeatable": true
      }
    ],
    "keywords": ["and", "logic"],
    "description": "Logical and operaion",
    "intercom_id": "and-value"
  },
  {
    "id": "between",
    "intercom_id": "between-value-lower-upper",
    "name": "between",
    "categories": ["generic"],
    "arguments": [
      { "name": "value", "description": "a scalar or column" },
      {
        "name": "lower",
        "description": "a scalar or column representing the lower bound"
      },
      {
        "name": "upper",
        "description": "a scalar or column representing the upper bound"
      }
    ],
    "keywords": ["in", "range"],
    "description": "Check if value falls between the lower/upper bounds."
  },
  {
    "id": "cast",
    "intercom_id": "convert-value-type",
    "name": "convert",
    "categories": ["generic"],
    "arguments": [
      { "name": "value", "description": "a scalar or column" },
      {
        "name": "type",
        "description": "the type to convert, accepts `text`, `float`, `int`, `str`, `time`, `date` and `timestamp`"
      }
    ],
    "keywords": ["cast", "type", "change"],
    "description": "Change the type of a value to a different data type."
  },
  {
    "id": "ceil",
    "intercom_id": "ceiling-number",
    "name": "ceiling",
    "categories": ["math"],
    "arguments": [
      { "name": "number", "description": "a numeric scalar or column" }
    ],
    "keywords": ["round", "upper", "decimal"],
    "description": "Round a numeric value up to the nearest integer value greater than or equal to this value."
  },
  {
    "id": "coalesce",
    "intercom_id": "coalesce-value",
    "name": "coalesce",
    "categories": ["generic"],
    "arguments": [
      {
        "name": "value",
        "description": "scalars or columns, uses the first not null record",
        "repeatable": true
      }
    ],
    "keywords": ["concatenate", "null", "join", "merge"],
    "description": "Returns the first non-null value from the passed arguments in left-to-right order"
  },
  {
    "id": "contains",
    "intercom_id": "contains-text-pattern",
    "name": "contains",
    "categories": ["text"],
    "arguments": [
      {
        "name": "text",
        "description": "a text scalar or column that should contain pattern"
      },
      {
        "name": "pattern",
        "description": "a text scalar or column that should be in text"
      }
    ],
    "keywords": ["in"],
    "description": "Determine if text exactly contains the given pattern."
  },
  {
    "id": "create_date",
    "intercom_id": "date-year-month-day",
    "name": "date",
    "categories": ["time & date"],
    "arguments": [
      {
        "name": "year",
        "description": "a integer scalar or column providing the year"
      },
      {
        "name": "month",
        "description": "a integer scalar or column providing the month"
      },
      {
        "name": "day",
        "description": "a integer scalar or column providing the day"
      }
    ],
    "keywords": [],
    "description": "Create a date from year, month and day"
  },
  {
    "id": "create_time",
    "intercom_id": "time-hour-minute-second",
    "name": "time",
    "categories": ["time & date"],
    "arguments": [
      {
        "name": "hour",
        "description": "a integer scalar or column providing the hour"
      },
      {
        "name": "minute",
        "description": "a integer scalar or column providing the minute"
      },
      {
        "name": "second",
        "description": "a integer scalar or column providing the second"
      }
    ],
    "keywords": [],
    "description": "Create a time from hour, minute and second"
  },
  {
    "id": "date",
    "intercom_id": "extract_date-date",
    "name": "extract_date",
    "categories": ["time & date"],
    "arguments": [
      { "name": "date", "description": "a timestamp scalar or column" }
    ],
    "keywords": [],
    "description": "Get date part from a timestamp value"
  },
  {
    "id": "day",
    "intercom_id": "day-date",
    "name": "day",
    "categories": ["time & date"],
    "arguments": [
      { "name": "date", "description": "a timestamp scalar or column" }
    ],
    "keywords": [],
    "description": "Get the day of month from a date or timestamp value"
  },
  {
    "id": "day_of_week",
    "intercom_id": "day_of_week-date",
    "name": "day_of_week",
    "categories": ["time & date"],
    "arguments": [
      { "name": "date", "description": "a timestamp scalar or column" }
    ],
    "keywords": [],
    "description": "Get day of the week from date or timestamp, starting from 1 Sunday to 7 Saturday"
  },
  {
    "id": "div",
    "intercom_id": "divide-dividend-divisor",
    "name": "divide",
    "categories": ["math"],
    "arguments": [
      { "name": "dividend", "description": "a numeric scalar or column" },
      { "name": "divisor", "description": "a numeric scalar or column" }
    ],
    "keywords": ["division"],
    "description": "Divide dividend by divisor"
  },
  {
    "id": "epoch_seconds",
    "intercom_id": "epoch_seconds-timestamp",
    "name": "epoch_seconds",
    "categories": ["time & date"],
    "arguments": [
      { "name": "timestamp", "description": "a timestamp scalar or column" }
    ],
    "keywords": ["unix", "since"],
    "description": "Seconds passed since 00:00:00 UTC on 1 January 1970 also called UNIX time"
  },
  {
    "id": "exp",
    "intercom_id": "exp-value",
    "name": "exp",
    "categories": ["math"],
    "arguments": [{ "name": "value", "description": "a scalar or column" }],
    "keywords": ["euler", "power", "exponential"],
    "description": "Calculate exponential value"
  },
  {
    "id": "find",
    "intercom_id": "find-text-searchtext",
    "name": "find",
    "categories": ["text"],
    "arguments": [
      { "name": "text", "description": "a text scalar or column" },
      { "name": "searchtext", "description": "a text scalar or column" }
    ],
    "keywords": ["position", "search"],
    "description": "Returns position (0 indexed) of first occurence of searchtext in text"
  },
  {
    "id": "floor",
    "intercom_id": "floor-number",
    "name": "floor",
    "categories": ["math"],
    "arguments": [
      { "name": "number", "description": "a numeric scalar or column" }
    ],
    "keywords": ["round", "down"],
    "description": "Rounding down a numeric value to the greatest integer less or eqqual"
  },
  {
    "id": "fillna",
    "intercom_id": "fillnull-value-fill_value",
    "name": "fillnull",
    "categories": ["generic"],
    "arguments": [
      { "name": "value", "description": "a scalar or column" },
      { "name": "fill_value", "description": "a scalar or column" }
    ],
    "keywords": ["replace"],
    "description": "Replace nulls in value with fill_value"
  },
  {
    "id": "hash",
    "intercom_id": "hash-value",
    "name": "hash",
    "categories": ["generic"],
    "arguments": [{ "name": "value", "description": "a scalar or column" }],
    "keywords": ["encrypt", "obscure"],
    "description": "Produces a cryptographic fingerprint from value using the Fingerprint64 method"
  },
  {
    "id": "hour",
    "intercom_id": "hour-time",
    "name": "hour",
    "categories": ["time & date"],
    "arguments": [{ "name": "time", "description": "a time scalar or column" }],
    "keywords": [],
    "description": "Get the hour from date or timestamp"
  },
  {
    "id": "ifelse",
    "intercom_id": "ifelse-condition-true_value-false_value",
    "name": "ifelse",
    "categories": ["generic"],
    "arguments": [
      {
        "name": "condition",
        "description": "a condition of a boolean column, scalar or another formula"
      },
      {
        "name": "true_value",
        "description": "scalar or column that is return if condition is true"
      },
      {
        "name": "false_value",
        "description": "scalar or column that is return if condition is false"
      }
    ],
    "keywords": ["condition"],
    "description": "Returns the first value if condition is true if not it returns the second value"
  },
  {
    "id": "isnull",
    "intercom_id": "isnull-value",
    "name": "isnull",
    "categories": ["generic"],
    "arguments": [{ "name": "value", "description": "a scalar or column" }],
    "keywords": ["null", "empty"],
    "description": "Check whether value is null"
  },
  {
    "id": "join",
    "intercom_id": "join-delimiter-text",
    "name": "join",
    "categories": ["text"],
    "arguments": [
      {
        "name": "delimiter",
        "description": "a value that is used to separate the following arguments"
      },
      {
        "name": "text",
        "description": "a text scalar or column",
        "repeatable": true
      }
    ],
    "keywords": ["merge", "concatenate"],
    "description": "Concatenate text with the delimiter"
  },
  {
    "id": "json_extract",
    "intercom_id": "json_extract-json-path-coming-soon",
    "name": "json_extract",
    "categories": ["text"],
    "arguments": [
      {
        "name": "json",
        "description": "a text value in JSON format"
      },
      {
        "name": "path",
        "description": "path to the desired item in the format e.g. `$.a.b[0]`"
      }
    ],
    "keywords": ["json"],
    "description": "Extract a field inside JSON, returns text"
  },
  {
    "id": "left",
    "intercom_id": "left-text-nchars",
    "name": "left",
    "categories": ["text"],
    "arguments": [
      { "name": "text", "description": "a text scalar or column" },
      {
        "name": "nchars",
        "description": "a numeric scalar or column indicating the number of characters from left that are returned"
      }
    ],
    "keywords": ["reduce"],
    "description": "Return up to nchars characters starting from start of each text"
  },
  {
    "id": "length",
    "intercom_id": "length-text",
    "name": "length",
    "categories": ["text"],
    "arguments": [{ "name": "text", "description": "a text scalar or column" }],
    "keywords": [],
    "description": "Calculate character length from text"
  },
  {
    "id": "like",
    "intercom_id": "like-text-pattern",
    "name": "like",
    "categories": ["text"],
    "arguments": [
      { "name": "text", "description": "a text scalar or column" },
      { "name": "pattern", "description": "a text scalar or column" }
    ],
    "keywords": ["compare"],
    "description": "Compare text with another pattern, returns True if pattern is like text"
  },
  {
    "id": "ln",
    "intercom_id": "ln-number",
    "name": "ln",
    "categories": ["math"],
    "arguments": [
      { "name": "number", "description": "a numeric scalar or column" }
    ],
    "keywords": ["logarithm"],
    "description": "Returns the natural logarithm of number"
  },
  {
    "id": "log",
    "intercom_id": "log-number-base",
    "name": "log",
    "categories": ["math"],
    "arguments": [
      { "name": "number", "description": "a numeric scalar or column" },
      { "name": "base", "description": "a numeric scalar or column" }
    ],
    "keywords": ["logarithm"],
    "description": "Returns the logarithm with base of number"
  },
  {
    "id": "log2",
    "intercom_id": "log2-number",
    "name": "log2",
    "categories": ["math"],
    "arguments": [
      { "name": "number", "description": "a number scalar or column" }
    ],
    "keywords": ["logarithm"],
    "description": "Returns the logarithm with base 2 of number"
  },
  {
    "id": "log10",
    "intercom_id": "log10-number",
    "name": "log10",
    "categories": ["math"],
    "arguments": [
      { "name": "number", "description": "a numeric scalar or column" }
    ],
    "keywords": ["logarithm"],
    "description": "Returns the logarithm with base 10 of number"
  },
  {
    "id": "lower",
    "intercom_id": "lower-text",
    "name": "lower",
    "categories": ["text"],
    "arguments": [{ "name": "text", "description": "a text scalar or column" }],
    "keywords": ["case"],
    "description": "Turns text to lowercase"
  },
  {
    "id": "lpad",
    "intercom_id": "lpad-text-length-fillchar",
    "name": "lpad",
    "categories": ["text"],
    "arguments": [
      { "name": "text", "description": "a text scalar or column" },
      {
        "name": "length",
        "description": "a numeric scalar or column indicating the length of the resulting text"
      },
      {
        "name": "fillchar",
        "description": "a text scalar or column",
        "optional": true
      }
    ],
    "keywords": [],
    "description": "Returns string of given length by truncating (on left) or padding (on left) original string"
  },
  {
    "id": "lstrip",
    "intercom_id": "ltrim-text",
    "name": "ltrim",
    "categories": ["text"],
    "arguments": [{ "name": "text", "description": "a text scalar or column" }],
    "keywords": ["whitespace", "strip"],
    "description": "Remove white space on the left of text"
  },
  {
    "id": "millisecond",
    "intercom_id": "millisecond-time",
    "name": "millisecond",
    "categories": ["time & date"],
    "arguments": [{ "name": "time", "description": "a time scalar or column" }],
    "keywords": [],
    "description": "Get the milliseconds from date or timestamp"
  },
  {
    "id": "minute",
    "intercom_id": "minute-time",
    "name": "minute",
    "categories": ["time & date"],
    "arguments": [{ "name": "time", "description": "a time scalar or column" }],
    "keywords": [],
    "description": "Get the minute from date or timestamp"
  },
  {
    "id": "month",
    "intercom_id": "month-date",
    "name": "month",
    "categories": ["time & date"],
    "arguments": [
      { "name": "date", "description": "a timestamp scalar or column" }
    ],
    "keywords": [],
    "description": "Get the month from date or timestamp"
  },
  {
    "id": "mul",
    "intercom_id": "product-x-y",
    "name": "product",
    "categories": ["math"],
    "arguments": [
      { "name": "x", "description": "a numeric scalar or column" },
      { "name": "y", "description": "a numeric scalar or column" }
    ],
    "keywords": ["multiply"],
    "description": "Multiply x and y"
  },
  {
    "id": "mod",
    "intercom_id": "modulo-x-y",
    "name": "modulo",
    "categories": ["math"],
    "arguments": [
      { "name": "x", "description": "an integer scalar or column" },
      { "name": "y", "description": "an integer scalar or column" }
    ],
    "keywords": ["modulo"],
    "description": "Compute the modulo of x and y"
  },
  {
    "id": "notnull",
    "intercom_id": "h_8505fc49ac",
    "name": "notnull",
    "categories": ["generic"],
    "arguments": [{ "name": "value", "description": "a scalar or column" }],
    "keywords": [],
    "description": "Check whether value is null"
  },
  {
    "id": "now",
    "intercom_id": "now",
    "name": "now",
    "categories": ["time & date"],
    "arguments": [],
    "keywords": [],
    "description": "Compute the current datetime"
  },
  {
    "id": "or",
    "name": "or",
    "categories": ["generic"],
    "arguments": [
      {
        "name": "value",
        "description": "boolean scalars or columns",
        "repeatable": true
      }
    ],
    "keywords": ["or", "logic"],
    "description": "Logical or operaion",
    "intercom_id": "or-value"
  },
  {
    "id": "parse_date",
    "intercom_id": "parse_date-value-format",
    "name": "parse_date",
    "categories": ["time & date", "text"],
    "arguments": [
      {
        "name": "value",
        "description": "a text scalar or column in the representing a date in `format`"
      },
      {
        "name": "format",
        "description": "a text scalar or column defining the date format of `value` e.g '%Y-%m-%d'"
      }
    ],
    "keywords": ["parse", "date"],
    "description": "Creates a date from a provided text and format"
  },
  {
    "id": "parse_time",
    "intercom_id": "parse_time-value-format",
    "name": "parse_time",
    "categories": ["time & date", "text"],
    "arguments": [
      {
        "name": "value",
        "description": "a text scalar or column in the representing a time in `format`"
      },
      {
        "name": "format",
        "description": "a text scalar or column defining the time format of `value` e.g '%Y-%m-%d'"
      }
    ],
    "keywords": ["parse", "time"],
    "description": "Creates a time from a provided text and format"
  },
  {
    "id": "parse_datetime",
    "intercom_id": "parse_datetime-value-format",
    "name": "parse_datetime",
    "categories": ["time & date", "text"],
    "arguments": [
      {
        "name": "value",
        "description": "a text scalar or column in the representing a datetime in `format`"
      },
      {
        "name": "format",
        "description": "a text scalar or column defining the datetime format of `value` e.g '%Y-%m-%d'"
      }
    ],
    "keywords": ["parse", "datetime"],
    "description": "Creates a datetime from a provided text and format"
  },
  {
    "id": "pow",
    "intercom_id": "power-number-exponent",
    "name": "power",
    "categories": ["math"],
    "arguments": [
      { "name": "number", "description": "a numeric scalar or column" },
      { "name": "exponent", "description": "a numeric scalar or column" }
    ],
    "keywords": ["exponential"],
    "description": "Calculate the number to the power of exponent"
  },
  {
    "id": "re_extract",
    "intercom_id": "regex_extract-text-pattern-index",
    "name": "regex_extract",
    "categories": ["text"],
    "arguments": [
      { "name": "text", "description": "a text scalar or column" },
      { "name": "pattern", "description": "a text scalar or column" },
      { "name": "index", "description": "a numeric scalar or column" }
    ],
    "keywords": ["regex"],
    "description": "Returns specified index, 0 indexed, from text based on regex pattern given"
  },
  {
    "id": "re_replace",
    "intercom_id": "regex_replace-text-pattern-replace",
    "name": "regex_replace",
    "categories": ["text"],
    "arguments": [
      { "name": "text", "description": "a text scalar or column" },
      {
        "name": "pattern",
        "description": "a text scalar or column that is being replaced by "
      },
      {
        "name": "replace",
        "description": "a text scalar or column that replaces the pattern in text"
      }
    ],
    "keywords": ["regex"],
    "description": "Replaces match found in text by regex pattern with replace text."
  },
  {
    "id": "re_search",
    "intercom_id": "regex_search-text-pattern",
    "name": "regex_search",
    "categories": ["text"],
    "arguments": [
      { "name": "text", "description": "a text scalar or column" },
      { "name": "pattern", "description": "a text scalar or column" }
    ],
    "keywords": ["regex"],
    "description": "Search regex pattern in text"
  },
  {
    "id": "repeat",
    "intercom_id": "repeat-text-n",
    "name": "repeat",
    "categories": ["text"],
    "arguments": [
      { "name": "text", "description": "a text scalar or column" },
      { "name": "n", "description": "a numeric scalar or column" }
    ],
    "keywords": [],
    "description": "Repeat text n times"
  },
  {
    "id": "replace",
    "intercom_id": "replace-text-pattern-replace",
    "name": "replace",
    "categories": ["text"],
    "arguments": [
      { "name": "text", "description": "a text scalar or column" },
      { "name": "pattern", "description": "a text scalar or column" },
      {
        "name": "replace",
        "description": "a text scalar or column that replaces the pattern in text"
      }
    ],
    "keywords": [],
    "description": "Replaces each exact occurrence of pattern in text with replace"
  },
  {
    "id": "reverse",
    "intercom_id": "reverse-text",
    "name": "reverse",
    "categories": ["text"],
    "arguments": [{ "name": "text", "description": "a text scalar or column" }],
    "keywords": ["inverse"],
    "description": "Reverse text character order"
  },
  {
    "id": "right",
    "intercom_id": "right-text-nchars",
    "name": "right",
    "categories": ["text"],
    "arguments": [
      { "name": "text", "description": "a text scalar or column" },
      {
        "name": "nchars",
        "description": "a numeric scalar or column indicating the number of characters from right that are returned"
      }
    ],
    "keywords": ["reduce"],
    "description": "Return up to nchar characters starting from end of each text."
  },
  {
    "id": "round",
    "intercom_id": "round-number-digits",
    "name": "round",
    "categories": ["math"],
    "arguments": [
      { "name": "number", "description": "a numeric scalar or column" },
      {
        "name": "digits",
        "description": "an integer scalar or column",
        "optional": true
      }
    ],
    "keywords": [],
    "description": "Round number to digit decimal positon"
  },
  {
    "id": "rpad",
    "intercom_id": "rpad-text-length-fillchar",
    "name": "rpad",
    "categories": ["text"],
    "arguments": [
      { "name": "text", "description": "a text scalar or column" },
      { "name": "length", "description": "a numeric scalar or column" },
      {
        "name": "fillchar",
        "description": "a numeric scalar or column",
        "optional": true
      }
    ],
    "keywords": [],
    "description": "Returns string of given length by truncating (on right) or padding (on right) original string"
  },
  {
    "id": "rstrip",
    "intercom_id": "rtrim-text",
    "name": "rtrim",
    "categories": ["text"],
    "arguments": [{ "name": "text", "description": "a text scalar or column" }],
    "keywords": ["strip"],
    "description": "Remove white space on the right of text"
  },
  {
    "id": "second",
    "intercom_id": "second-time",
    "name": "second",
    "categories": ["time & date"],
    "arguments": [{ "name": "time", "description": "a time scalar or column" }],
    "keywords": [],
    "description": "Get the seconds from time or timestamp"
  },
  {
    "id": "sqrt",
    "intercom_id": "sqrt-number",
    "name": "sqrt",
    "categories": ["math"],
    "arguments": [
      { "name": "number", "description": "a numeric scalar or column" }
    ],
    "keywords": ["root"],
    "description": "Calculate the square root"
  },
  {
    "id": "strftime",
    "intercom_id": "format_datetime-datetime-format",
    "name": "format_datetime",
    "categories": ["time & date"],
    "arguments": [
      { "name": "datetime", "description": "a datetime scalar or column" },
      {
        "name": "format",
        "description": "determines how the resulting text is formatted"
      }
    ],
    "keywords": ["strftime"],
    "description": "Format timestamp into string with given format"
  },
  {
    "id": "strip",
    "intercom_id": "trim-text",
    "name": "trim",
    "categories": ["text"],
    "arguments": [{ "name": "text", "description": "a text scalar or column" }],
    "keywords": ["strip"],
    "description": "Remove white space surrounding the text"
  },
  {
    "id": "sub",
    "intercom_id": "subtract-minuend-subtrahend",
    "name": "subtract",
    "categories": ["math"],
    "arguments": [
      { "name": "minuend", "description": "a numeric scalar or column" },
      { "name": "subtrahend", "description": "a numeric scalar or column" }
    ],
    "keywords": ["minus"],
    "description": "Substract subtrahend from minuend"
  },
  {
    "id": "subtract_days",
    "intercom_id": "subtract_days-date-days",
    "name": "subtract_days",
    "categories": ["time & date"],
    "arguments": [
      { "name": "date", "description": "a date scalar or column" },
      {
        "name": "days",
        "description": "an integer scalar to subtract"
      }
    ],
    "keywords": ["minus"],
    "description": "Substract days from date"
  },
  {
    "id": "substitute",
    "intercom_id": "substitute-text-pattern-replace-else",
    "name": "substitute",
    "categories": ["text"],
    "arguments": [
      { "name": "text", "description": "a text scalar or column" },
      { "name": "pattern", "description": "a text scalar or column" },
      {
        "name": "replace",
        "description": "a text scalar or column",
        "optional": true
      },
      {
        "name": "else",
        "description": "a text scalar or column",
        "optional": true
      }
    ],
    "keywords": ["replace"],
    "description": "Replace text if with replace if pattern is equal to text optional replace with else"
  },
  {
    "id": "time",
    "intercom_id": "extract_time-datetime",
    "name": "extract_time",
    "categories": ["time & date"],
    "arguments": [
      { "name": "datetime", "description": "a datetime scalar or column" }
    ],
    "keywords": [],
    "description": "Get the time from a timestamp"
  },
  {
    "id": "to_timestamp",
    "intercom_id": "datetime_seconds-seconds-unit",
    "name": "datetime_seconds",
    "categories": ["time & date"],
    "arguments": [
      { "name": "seconds", "description": "an integer scalar or column" },
      {
        "name": "unit",
        "description": "\"s\" for seconds, \"ms\" for milliseconds, \"us\" for microseconds "
      }
    ],
    "keywords": [],
    "description": "Create a datetime from an integer as the number of unit since from January 1st, 1970 UTC (unix time)"
  },
  {
    "id": "today",
    "intercom_id": "today",
    "name": "today",
    "categories": ["time & date"],
    "arguments": [],
    "keywords": [],
    "description": "Compute today's date"
  },
  {
    "id": "timestamp_diff",
    "intercom_id": "datetime_diff-minuend-subtrahend-unit",
    "name": "datetime_diff",
    "categories": ["time & date"],
    "arguments": [
      { "name": "minuend", "description": "a datetime scalar or column" },
      { "name": "subtrahend", "description": "a datetime scalar or column" },
      {
        "name": "unit",
        "description": "unit of the difference e.g. \"s\" for seconds"
      }
    ],
    "keywords": [],
    "description": "Get the difference between minuend and subtrahend in the given unit"
  },
  {
    "id": "truncate",
    "intercom_id": "truncate-datetime-unit",
    "name": "truncate",
    "categories": ["time & date"],
    "arguments": [
      { "name": "datetime", "description": "a datetime scalar or column" },
      { "name": "unit", "description": "unit e.g. \"s\" for seconds" }
    ],
    "keywords": [],
    "description": "Zero out smaller-size units beyond indicated unit"
  },
  {
    "id": "upper",
    "intercom_id": "upper-text",
    "name": "upper",
    "categories": ["text"],
    "arguments": [{ "name": "text", "description": "a text scalar or column" }],
    "keywords": [],
    "description": "Capitalize text."
  },
  {
    "id": "weekday",
    "intercom_id": "weekday-date",
    "name": "weekday",
    "categories": ["time & date"],
    "arguments": [
      { "name": "date", "description": "a timestamp scalar or column" }
    ],
    "keywords": [],
    "description": "Gets weekday from a date"
  },
  {
    "id": "year",
    "intercom_id": "year-date",
    "name": "year",
    "categories": ["time & date"],
    "arguments": [
      { "name": "date", "description": "a timestamp scalar or column" }
    ],
    "keywords": [],
    "description": "Get the year from date"
  }
]
