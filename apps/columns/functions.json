[
  {
    "id": "abs",
    "name": "abs",
    "categories": ["math"],
    "arguments": [{ "name": "number", "description": "a numeric scalar or column" }],
    "keywords": ["absolute", "modulus", "sign", "positive"],
    "description": "Calculate the absolute value of a numeric value."
  },
  {
    "id": "add",
    "name": "add",
    "categories": ["math"],
    "arguments": [
      { "name": "x", "description": "a numeric scalar or column" },
      { "name": "y", "description": "a numeric scalar or column" }
    ],
    "keywords": ["addition", "plus", "summation"],
    "description": "Adds two numeric values together."
  },
  {
    "id": "between",
    "name": "between",
    "categories": ["generic"],
    "arguments": [
      { "name": "value", "description": "a scalar or column" },
      { "name": "lower", "description": "a scalar or column representing the lower bound" },
      { "name": "upper", "description": "a scalar or column representing the upper bound" }
    ],
    "keywords": ["in", "range"],
    "description": "Check if value falls between the lower/upper bounds."
  },
  {
    "id": "cast",
    "name": "convert",
    "categories": ["generic"],
    "arguments": [
      { "name": "value", "description": "a scalar or column" },
      { "name": "type", "description": "the type to convert to e.g. `text`" }
    ],
    "keywords": ["cast", "type", "change"],
    "description": "Change the type of a value to a different data type."
  },
  {
    "id": "ceil",
    "name": "ceiling",
    "categories": ["math"],
    "arguments": [{ "name": "number", "description": "a numeric scalar or column" }],
    "keywords": ["round", "upper", "decimal"],
    "description": "Round a numeric value up to the nearest integer value greater than or equal to this value."
  },
  {
    "id": "coalesce",
    "name": "coalesce",
    "categories": ["generic"],
    "arguments": [
      {
        "name": "value",
        "description": "scalars or columns, uses the first not null record",
        "repeatable": true
      }
    ],
    "keywords": ["concatenate", "null", "join", "merge"],
    "description": "Returns the first non-null value from the passed arguments in left-to-right order"
  },
  {
    "id": "contains",
    "name": "contains",
    "categories": ["text"],
    "arguments": [
      { "name": "text", "description": "a text scalar or column that should contain pattern" },
      { "name": "pattern", "description": "a text scalar or column that should be in text" }
    ],
    "keywords": ["in"],
    "description": "Determine if text exactly contains the given pattern."
  },
  {
    "id": "date",
    "name": "date",
    "categories": ["time & date"],
    "arguments": [{ "name": "date", "description": "a timestamp scalar or column" }],
    "keywords": [],
    "description": "Get date part from a timestamp value"
  },
  {
    "id": "day",
    "name": "day",
    "categories": ["time & date"],
    "arguments": [{ "name": "date", "description": "a timestamp scalar or column" }],
    "keywords": [],
    "description": "Get the day of month from a date or timestamp value"
  },
  {
    "id": "day_of_week",
    "name": "day_of_week",
    "categories": ["time & date"],
    "arguments": [{ "name": "date", "description": "a timestamp scalar or column" }],
    "keywords": [],
    "description": "Get day of the week from date or timestamp"
  },
  {
    "id": "div",
    "name": "divide",
    "categories": ["math"],
    "arguments": [
      { "name": "dividend", "description": "a numeric scalar or column" },
      { "name": "divisor", "description": "a numeric scalar or column" }
    ],
    "keywords": ["division"],
    "description": "Divide dividend by divisor"
  },
  {
    "id": "epoch_seconds",
    "name": "epoch_seconds",
    "categories": ["time & date"],
    "arguments": [{ "name": "timestamp", "description": "a timestamp scalar or column" }],
    "keywords": ["unix", "since"],
    "description": "Seconds passed since 00:00:00 UTC on 1 January 1970 also called UNIX time"
  },
  {
    "id": "exp",
    "name": "exp",
    "categories": ["math"],
    "arguments": [{ "name": "value", "description": "a scalar or column" }],
    "keywords": ["euler", "power", "exponential"],
    "description": "Calculate exponential value"
  },
  {
    "id": "find",
    "name": "find",
    "categories": ["text"],
    "arguments": [
      { "name": "text", "description": "a text scalar or column" },
      { "name": "searchtext", "description": "a text scalar or column" }
    ],
    "keywords": ["position", "search"],
    "description": "Returns position (0 indexed) of first occurence of searchtext in text"
  },
  {
    "id": "floor",
    "name": "floor",
    "categories": ["math"],
    "arguments": [{ "name": "number", "description": "a numeric scalar or column" }],
    "keywords": ["round", "down"],
    "description": "Rounding down a numeric value to the greatest integer less or eqqual"
  },
  {
    "id": "fillna",
    "name": "fillnull",
    "categories": ["generic"],
    "arguments": [
      { "name": "value", "description": "a scalar or column" },
      { "name": "fill_value", "description": "a scalar or column" }
    ],
    "keywords": ["replace"],
    "description": "Replace nulls in value with fill_value"
  },
  {
    "id": "hash",
    "name": "hash",
    "categories": ["generic"],
    "arguments": [{ "name": "value", "description": "a scalar or column" }],
    "keywords": ["encrypt", "obscure"],
    "description": "Produces a cryptographic fingerprint from value using the Fingerprint64 method"
  },
  {
    "id": "hour",
    "name": "hour",
    "categories": ["time & date"],
    "arguments": [{ "name": "time", "description": "a time scalar or column" }],
    "keywords": [],
    "description": "Get the hour from date or timestamp"
  },
  {
    "id": "ifelse",
    "name": "ifelse",
    "categories": ["generic"],
    "arguments": [
      {
        "name": "condition",
        "description": "a condition of a boolean column, scalar or another formula"
      },
      {
        "name": "true_value",
        "description": "scalar or column that is return if condition is true"
      },
      {
        "name": "false_value",
        "description": "scalar or column that is return if condition is false"
      }
    ],
    "keywords": ["condition"],
    "description": "Returns the first value if condition is true if not it returns the second value"
  },
  {
    "id": "isnull",
    "name": "isnull",
    "categories": ["generic"],
    "arguments": [{ "name": "value", "description": "a scalar or column" }],
    "keywords": ["null", "empty"],
    "description": "Check whether value is null"
  },
  {
    "id": "join",
    "name": "join",
    "categories": ["text"],
    "arguments": [
      {
        "name": "delimiter",
        "description": "a value that is used to separate the following arguments"
      },
      { "name": "text", "description": "a text scalar or column", "repeatable": true }
    ],
    "keywords": ["merge", "concatenate"],
    "description": "Concatenate text with the delimiter"
  },
  {
    "id": "left",
    "name": "left",
    "categories": ["text"],
    "arguments": [
      { "name": "text", "description": "a text scalar or column" },
      {
        "name": "nchars",
        "description": "a numeric scalar or column indicating the number of characters from left that are returned"
      }
    ],
    "keywords": ["reduce"],
    "description": "Return up to nchars characters starting from start of each text"
  },
  {
    "id": "length",
    "name": "length",
    "categories": ["text"],
    "arguments": [{ "name": "text", "description": "a text scalar or column" }],
    "keywords": [],
    "description": "Calculate character length from text"
  },
  {
    "id": "like",
    "name": "like",
    "categories": ["text"],
    "arguments": [
      { "name": "text", "description": "a text scalar or column" },
      { "name": "pattern", "description": "a text scalar or column" }
    ],
    "keywords": ["compare"],
    "description": "Compare text with another pattern, returns True if pattern is like text"
  },
  {
    "id": "ln",
    "name": "ln",
    "categories": ["math"],
    "arguments": [{ "name": "number", "description": "a numeric scalar or column" }],
    "keywords": ["logarithm"],
    "description": "Returns the natural logarithm of number"
  },
  {
    "id": "log",
    "name": "log",
    "categories": ["math"],
    "arguments": [
      { "name": "number", "description": "a numeric scalar or column" },
      { "name": "base", "description": "a numeric scalar or column" }
    ],
    "keywords": ["logarithm"],
    "description": "Returns the logarithm with base of number"
  },
  {
    "id": "log2",
    "name": "log2",
    "categories": ["math"],
    "arguments": [{ "name": "number", "description": "a number scalar or column" }],
    "keywords": ["logarithm"],
    "description": "Returns the logarithm with base 2 of number"
  },
  {
    "id": "log10",
    "name": "log10",
    "categories": ["math"],
    "arguments": [{ "name": "number", "description": "a numeric scalar or column" }],
    "keywords": ["logarithm"],
    "description": "Returns the logarithm with base 10 of number"
  },
  {
    "id": "lower",
    "name": "lower",
    "categories": ["text"],
    "arguments": [{ "name": "text", "description": "a text scalar or column" }],
    "keywords": ["case"],
    "description": "Turns text to lowercase"
  },
  {
    "id": "lpad",
    "name": "lpad",
    "categories": ["text"],
    "arguments": [
      { "name": "text", "description": "a text scalar or column" },
      {
        "name": "length",
        "description": "a numeric scalar or column indicating the length of the resulting text"
      },
      { "name": "fillchar", "description": "a text scalar or column", "optional": true }
    ],
    "keywords": [],
    "description": "Returns string of given length by truncating (on left) or padding (on left) original string"
  },
  {
    "id": "lstrip",
    "name": "ltrim",
    "categories": ["text"],
    "arguments": [{ "name": "text", "description": "a text scalar or column" }],
    "keywords": ["whitespace", "strip"],
    "description": "Remove white space on the left of text"
  },
  {
    "id": "millisecond",
    "name": "millisecond",
    "categories": ["time & date"],
    "arguments": [{ "name": "time", "description": "a time scalar or column" }],
    "keywords": [],
    "description": "Get the milliseconds from date or timestamp"
  },
  {
    "id": "minute",
    "name": "minute",
    "categories": ["time & date"],
    "arguments": [{ "name": "time", "description": "a time scalar or column" }],
    "keywords": [],
    "description": "Get the minute from date or timestamp"
  },
  {
    "id": "month",
    "name": "month",
    "categories": ["time & date"],
    "arguments": [{ "name": "date", "description": "a timestamp scalar or column" }],
    "keywords": [],
    "description": "Get the month from date or timestamp"
  },
  {
    "id": "mul",
    "name": "product",
    "categories": ["math"],
    "arguments": [
      { "name": "x", "description": "a numeric scalar or column" },
      { "name": "y", "description": "a numeric scalar or column" }
    ],
    "keywords": ["multiply"],
    "description": "Multiply x and y"
  },
  {
    "id": "notnull",
    "name": "notnull",
    "categories": ["generic"],
    "arguments": [{ "name": "value", "description": "a scalar or column" }],
    "keywords": [],
    "description": "Check whether value is null"
  },
  {
    "id": "pow",
    "name": "power",
    "categories": ["math"],
    "arguments": [
      { "name": "number", "description": "a numeric scalar or column" },
      { "name": "exponent", "description": "a numeric scalar or column" }
    ],
    "keywords": ["exponential"],
    "description": "Calculate the number to the power of exponent"
  },
  {
    "id": "re_extract",
    "name": "regex_extract",
    "categories": ["text"],
    "arguments": [
      { "name": "text", "description": "a text scalar or column" },
      { "name": "pattern", "description": "a text scalar or column" },
      { "name": "index", "description": "a numeric scalar or column" }
    ],
    "keywords": ["regex"],
    "description": "Returns specified index, 0 indexed, from text based on regex pattern given"
  },
  {
    "id": "re_replace",
    "name": "regex_replace",
    "categories": ["text"],
    "arguments": [
      { "name": "text", "description": "a text scalar or column" },
      { "name": "pattern", "description": "a text scalar or column that is being replaced by " },
      {
        "name": "replace",
        "description": "a text scalar or column that replaces the pattern in text"
      }
    ],
    "keywords": ["regex"],
    "description": "Replaces match found in text by regex pattern with replace text."
  },
  {
    "id": "re_search",
    "name": "regex_search",
    "categories": ["text"],
    "arguments": [
      { "name": "text", "description": "a text scalar or column" },
      { "name": "pattern", "description": "a text scalar or column" }
    ],
    "keywords": ["regex"],
    "description": "Search regex pattern in text"
  },
  {
    "id": "repeat",
    "name": "repeat",
    "categories": ["text"],
    "arguments": [
      { "name": "text", "description": "a text scalar or column" },
      { "name": "n", "description": "a numeric scalar or column" }
    ],
    "keywords": [],
    "description": "Repeat text n times"
  },
  {
    "id": "replace",
    "name": "replace",
    "categories": ["text"],
    "arguments": [
      { "name": "text", "description": "a text scalar or column" },
      { "name": "pattern", "description": "a text scalar or column" },
      {
        "name": "replace",
        "description": "a text scalar or column that replaces the pattern in text"
      }
    ],
    "keywords": [],
    "description": "Replaces each exact occurrence of pattern in text with replace"
  },
  {
    "id": "reverse",
    "name": "reverse",
    "categories": ["text"],
    "arguments": [{ "name": "text", "description": "a text scalar or column" }],
    "keywords": ["inverse"],
    "description": "Reverse text character order"
  },
  {
    "id": "right",
    "name": "right",
    "categories": ["text"],
    "arguments": [
      { "name": "text", "description": "a text scalar or column" },
      {
        "name": "nchars",
        "description": "a numeric scalar or column indicating the number of characters from right that are returned"
      }
    ],
    "keywords": ["reduce"],
    "description": "Return up to nchar characters starting from end of each text."
  },
  {
    "id": "round",
    "name": "round",
    "categories": ["math"],
    "arguments": [
      { "name": "number", "description": "a numeric scalar or column" },
      { "name": "digits", "description": "an integer scalar or column" }
    ],
    "keywords": [],
    "description": "Round number to digit decimal positon"
  },
  {
    "id": "rpad",
    "name": "rpad",
    "categories": ["text"],
    "arguments": [
      { "name": "text", "description": "a text scalar or column" },
      { "name": "length", "description": "a numeric scalar or column" },
      { "name": "fillchar", "description": "a numeric scalar or column", "optional": true }
    ],
    "keywords": [],
    "description": "Returns string of given length by truncating (on right) or padding (on right) original string"
  },
  {
    "id": "rstrip",
    "name": "rtrim",
    "categories": ["text"],
    "arguments": [{ "name": "text", "description": "a text scalar or column" }],
    "keywords": ["strip"],
    "description": "Remove white space on the right of text"
  },
  {
    "id": "second",
    "name": "second",
    "categories": ["time & date"],
    "arguments": [{ "name": "time", "description": "a time scalar or column" }],
    "keywords": [],
    "description": "Get the seconds from time or timestamp"
  },
  {
    "id": "sqrt",
    "name": "sqrt",
    "categories": ["math"],
    "arguments": [{ "name": "number", "description": "a numeric scalar or column" }],
    "keywords": ["root"],
    "description": "Calculate the square root"
  },
  {
    "id": "strftime",
    "name": "format_datetime",
    "categories": ["time & date"],
    "arguments": [
      { "name": "datetime", "description": "a datetime scalar or column" },
      { "name": "format", "description": "determines how the resulting text is formatted" }
    ],
    "keywords": ["strftime"],
    "description": "Format timestamp into string with given format"
  },
  {
    "id": "strip",
    "name": "trim",
    "categories": ["text"],
    "arguments": [{ "name": "text", "description": "a text scalar or column" }],
    "keywords": ["strip"],
    "description": "Remove white space surrounding the text"
  },
  {
    "id": "sub",
    "name": "subtract",
    "categories": ["math"],
    "arguments": [
      { "name": "minuend", "description": "a numeric scalar or column" },
      { "name": "subtrahend", "description": "a numeric scalar or column" }
    ],
    "keywords": ["minus"],
    "description": "Substract subtrahend from minuend"
  },
  {
    "id": "substitute",
    "name": "substitute",
    "categories": ["text"],
    "arguments": [
      { "name": "text", "description": "a text scalar or column" },
      { "name": "pattern", "description": "a text scalar or column" },
      { "name": "replace", "description": "a text scalar or column", "optional": true },
      { "name": "else", "description": "a text scalar or column", "optional": true }
    ],
    "keywords": ["replace"],
    "description": "Replace text if with replace if pattern is equal to text optional replace with else"
  },
  {
    "id": "time",
    "name": "time",
    "categories": ["time & date"],
    "arguments": [{ "name": "datetime", "description": "a datetime scalar or column" }],
    "keywords": [],
    "description": "Get the time from a timestamp"
  },
  {
    "id": "to_timestamp",
    "name": "datetime_seconds",
    "categories": ["time & date"],
    "arguments": [
      { "name": "seconds", "description": "an integer scalar or column" },
      {
        "name": "unit",
        "description": "\"s\" for seconds, \"ms\" for milliseconds, \"us\" for microseconds "
      }
    ],
    "keywords": [],
    "description": "Create a datetime from an integer as the number of unit since from January 1st, 1970 UTC (unix time)"
  },
  {
    "id": "timestamp_diff",
    "name": "datetime_diff",
    "categories": ["time & date"],
    "arguments": [
      { "name": "minuend", "description": "a datetime scalar or column" },
      { "name": "subtrahend", "description": "a datetime scalar or column" },
      { "name": "unit", "description": "unit of the difference e.g. \"s\" for seconds" }
    ],
    "keywords": [],
    "description": "Get the difference between minuend and subtrahend in the given unit"
  },
  {
    "id": "truncate",
    "name": "truncate",
    "categories": ["time & date"],
    "arguments": [
      { "name": "datetime", "description": "a datetime scalar or column" },
      { "name": "unit", "description": "unit e.g. \"s\" for seconds" }
    ],
    "keywords": [],
    "description": "Zero out smaller-size units beyond indicated unit"
  },
  {
    "id": "upper",
    "name": "upper",
    "categories": ["text"],
    "arguments": [{ "name": "text", "description": "a text scalar or column" }],
    "keywords": [],
    "description": "Capitalize text."
  },
  {
    "id": "year",
    "name": "year",
    "categories": ["time & date"],
    "arguments": [{ "name": "date", "description": "a timestamp scalar or column" }],
    "keywords": [],
    "description": "Get the year from date"
  }
]
