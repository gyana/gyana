# Generated by Django 3.2.7 on 2021-11-18 11:46

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("nodes", "0014_node_has_been_saved"),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            database_operations=[
                migrations.RunSQL(
                    sql="ALTER TABLE nodes_node_parents RENAME TO nodes_nodeparents",
                    reverse_sql="ALTER TABLE nodes_nodeparents RENAME TO nodes_node_parents",
                ),
            ],
            state_operations=[
                migrations.CreateModel(
                    name="NodeParents",
                    fields=[
                        (
                            "id",
                            models.AutoField(
                                auto_created=True,
                                primary_key=True,
                                serialize=False,
                                verbose_name="ID",
                            ),
                        ),
                        (
                            "from_node",
                            models.ForeignKey(
                                on_delete=django.db.models.deletion.CASCADE,
                                related_name="parent",
                                to="nodes.node",
                            ),
                        ),
                        (
                            "to_node",
                            models.ForeignKey(
                                on_delete=django.db.models.deletion.CASCADE,
                                related_name="child",
                                to="nodes.node",
                            ),
                        ),
                    ],
                ),
                migrations.AlterField(
                    model_name="node",
                    name="parents",
                    field=models.ManyToManyField(
                        blank=True,
                        related_name="children",
                        through="nodes.NodeParents",
                        to="nodes.Node",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="nodeparents",
            name="position",
            field=models.IntegerField(default=0),
        ),
        migrations.RenameField(
            model_name="nodeparents",
            old_name="from_node",
            new_name="child",
        ),
        migrations.RenameField(
            model_name="nodeparents",
            old_name="to_node",
            new_name="parent",
        ),
        migrations.AlterField(
            model_name="node",
            name="parents",
            field=models.ManyToManyField(
                blank=True, through="nodes.NodeParents", to="nodes.Node"
            ),
        ),
        migrations.AlterField(
            model_name="nodeparents",
            name="child",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="parent_set",
                to="nodes.node",
            ),
        ),
        migrations.AlterField(
            model_name="nodeparents",
            name="parent",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="child_set",
                to="nodes.node",
            ),
        ),
        # Make sure all migrations are ordered
        migrations.RunSQL(
            """
WITH order_cte AS (
    SELECT id, count(*) over(partition by child_id order by id) -1 AS position
    FROM nodes_nodeparents
)
UPDATE nodes_nodeparents n
SET position = c.position
FROM order_cte c
WHERE c.id = n.id
""",
            reverse_sql=migrations.RunSQL.noop,
        ),
    ]
